spring.application.name=spring-user

spring.datasource.url=jdbc:postgresql://localhost:5432/car_Sales_pe
spring.datasource.username=postgres
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.security.oauth2.client.registration.auth0.client-id=MEyyuZrKpu9WR9DHHWlrcbTtcRXiH7Jb
spring.security.oauth2.client.registration.auth0.client-secret=xF-1Z3Fsl-ryRB-DyiPFX9n7iFPrO31tEsT1CvQtMQuUm6-ocWCikuXNju_ZTRvA
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:8080/login/oauth2/code/auth0
spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-gmarko.us.auth0.com/
spring.security.oauth2.client.provider.auth0.authorization-uri=https://dev-gmarko.us.auth0.com/authorize
spring.security.oauth2.client.provider.auth0.token-uri=https://dev-gmarko.us.auth0.com/oauth/token
spring.security.oauth2.client.provider.auth0.user-info-uri=https://dev-gmarko.us.auth0.com/userinfo
spring.security.oauth2.client.provider.auth0.jwk-set-uri=https://dev-gmarko.us.auth0.com/.well-known/jwks.json
spring.security.oauth2.client.provider.auth0.user-name-attribute=sub

# JWT Resource Server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-gmarko.us.auth0.com/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-gmarko.us.auth0.com/.well-known/jwks.json

# Server configuration
server.port=8080
logging.level.org.springframework.security=DEBUG



